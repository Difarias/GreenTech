<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="generator" content="Mobirise v5.0.29, mobirise.com">
  <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1">
  <link rel="shortcut icon" href="/images/logo.jpeg" type="image/x-icon">
  <meta name="description" content="">
  <link rel="stylesheet" href="styles/pedidos.css">
  <title>Pedidos</title>
</head>
<body> 
    <header>
        <div class="header">
            <div class="logo">
                <div class="logoimg">
                    <a href="/">
                        <img src="./images/logo.jpeg" alt="Logo do E-commerce">
                    </a>
                </div>
                <div class="logotext">
                    <h1>GreenTech</h1>
                </div>
            </div>
            <div class="searcher">
                <div class="search-container">
                    <input type="text" class="search-input" placeholder="Buscar...">
                    <img class="search-icon" src="./images/search1.svg" alt="Ícone de Pesquisa">
                </div>
            </div>
            <div class="cart">
                <a id="cart-link" href="#" rel="noopener noreferrer">
                    <img src="./images/cart.svg">
                    <span id="cart-item-count" class="cart-item-count">0</span> <!-- Contador de itens do carrinho -->
                </a>
            </div>
            <div class="button">
                <div class="loginimg">
                    <img src="../images/login-icon.svg" alt="icon login">
                    <a class="login-button" href="/login">Login</a>
                </div>
                <div class="logout-menu">
                    <div class="dropdown">
                        <button class="dropbtn">Login</button>
                        <div class="dropdown-content">
                            <a id="meus-pedidos" href="/pedidos">Meus Pedidos</a>
                            <a href="#" onclick="clearLocalStorage()">Sair</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>  
        <nav class="category">
            <ul class="nav">
                <% categorias.forEach(categoria => { %>
                    <li><a href="/produtos/<%= categoria.id_categoria %>"><%= categoria.nome_categoria %></a></li>
                <% }) %>
            </ul>
        </nav>
    </header>

    <div class="container">
        <div class="title-filter">
            <h1 class="title">Meus Pedidos</h1>
            <input type="text" class="filter-input" placeholder="Filtrar por ID">
        </div>
        <div class="order-list">
        </div>
    </div>
    
    <footer class="container-footer">
        <div class="footer-box">
            <p>Desenvolvido por Diêgo Farias e Isaias Mendes</p>
        </div>
    </footer>

    <script>
        let cartItems = [];

        document.addEventListener('DOMContentLoaded', () => {
            function loadUsernameAndOrders() {
                const idCliente = localStorage.getItem('id');
                if (idCliente) {
                    const loginButton = document.querySelector('.login-button');
                    const dropbtn     = document.querySelector('.dropbtn');
                    const logoutMenu  = document.querySelector('.logout-menu');
                    const orderList   = document.querySelector('.order-list');
                    
                    if (loginButton && dropbtn && logoutMenu) {
                        dropbtn.textContent = localStorage.getItem('username').split(' ')[0];
                        logoutMenu.style.display = 'block';
                        loginButton.style.display = 'none';
                        
                        // Requisição AJAX para carregar os pedidos do cliente
                        fetch(`/pedidos/${idCliente}/pedidos`)
                            .then(response => response.json())
                            .then(pedidos => {
                                
                                orderList.innerHTML = '';
                                
                                // Iterar sobre os pedidos e criar containers dinâmicos
                                pedidos.forEach(pedido => {
                                    const orderDiv = document.createElement('div');
                                    orderDiv.classList.add('order');

                                    const orderHeader = document.createElement('div');
                                    orderHeader.classList.add('order-header');

                                    const orderInfo = document.createElement('div');
                                    orderInfo.classList.add('order-info');

                                    const orderId = document.createElement('p');
                                    orderId.classList.add('order-id');
                                    orderId.textContent = `ID do Pedido: ${pedido.id_pedido}`;

                                    const orderDate = document.createElement('p');
                                    orderDate.classList.add('order-date');
                                    
                                    const dataPedidoFormatada = new Date(pedido.data_pedido).toLocaleDateString('pt-BR', {
                                        day: 'numeric',
                                        month: 'short',
                                        year: 'numeric'
                                    });
                                    orderDate.textContent = `Pedido feito em: ${dataPedidoFormatada}`;

                                    const orderTotal = document.createElement('p');
                                    orderTotal.classList.add('order-total');
                                    orderTotal.textContent = `Total: R$ ${pedido.valorTotal_pedido.toFixed(2)}`;

                                    orderInfo.appendChild(orderId);
                                    orderInfo.appendChild(orderDate);
                                    orderInfo.appendChild(orderTotal);

                                    const orderStatus = document.createElement('div');
                                    orderStatus.classList.add('order-status');
                                    
                                    switch(pedido.status_pedido){
                                        case 1:
                                            orderStatus.textContent = "Aguardando Confirmação";
                                            break;
                                        case 2:
                                            orderStatus.textContent = "Em processamento";
                                            break;
                                        case 3:
                                            orderStatus.textContent = "Concluído";
                                            break;
                                        default:
                                            orderStatus.textContent = "Desconhecido";
                                            break;
                                    }

                                    const orderButton = document.createElement('button');
                                    orderButton.classList.add('order-button', 'details-button');
                                    orderButton.textContent = 'Detalhes do Pedido';
                                    orderButton.addEventListener('click', function() {
                                        window.location.href = "/detalhesPedidos"; 
                                    });
                                    
                                    orderHeader.appendChild(orderInfo);
                                    orderHeader.appendChild(orderStatus);
                                    orderHeader.appendChild(orderButton);

                                    orderDiv.appendChild(orderHeader);

                                    // Adicione o novo container à lista de pedidos
                                    orderList.appendChild(orderDiv);
                                });
                            })
                            .catch(error => console.error('Erro ao carregar os pedidos', error));
                            
                        dropbtn.addEventListener('click', function() {
                            const dropdownContent = document.querySelector('.dropdown-content');
                            dropdownContent.style.display = dropdownContent.style.display === 'block' ? 'none' : 'block';
                        });
                    }
                }
                updateCartItemCount();
            }

            function filterOrders() {
                const filterInput = document.querySelector('.filter-input');
                filterInput.addEventListener('input', () => {
                    const filterValue = filterInput.value.trim().toLowerCase();
                    const orders = document.querySelectorAll('.order');

                    orders.forEach(order => {
                        const orderId = order.querySelector('.order-id').textContent.toLowerCase();
                        if (orderId.includes(filterValue)) {
                            order.style.display = 'block'; // Exibe o pedido se o ID corresponder ao filtro
                        } else {
                            order.style.display = 'none'; // Oculta o pedido se o ID não corresponder ao filtro
                        }
                    });
                });
            }

            function clearLocalStorage() {           
                console.log('Limpando armazenamento local...');
                localStorage.removeItem('username');
                localStorage.removeItem('id'); 
                location.reload();
            }

            function loadDataFromLocalStorage() {
                const storedCartItems = localStorage.getItem('cartItems');
                if (storedCartItems) {
                    cartItems = JSON.parse(storedCartItems);
                }
                updateCartItemCount();
                updateCartLink();
            }

            function saveCartItemsToLocalStorage() {
                localStorage.setItem('cartItems', JSON.stringify(cartItems));
            }

            function updateCartItemCount() {
                const cartItemCount = document.getElementById('cart-item-count');
                cartItemCount.innerText = cartItems.length;
            }

            function updateCartLink() {
                const cartLink = document.getElementById('cart-link');
                cartLink.href = `/pagamento?produtos=${JSON.stringify(cartItems)}`;
            }

            loadUsernameAndOrders();
            filterOrders();
            loadDataFromLocalStorage();
        });
    </script>
</body>
</html>
