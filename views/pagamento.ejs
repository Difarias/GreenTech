<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pagamento</title>
    <link rel="stylesheet" href="../styles/pagamento.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>
<body>
    <header>
        <div class="header">
            <div class="logo">
                <div class="logoimg">
                    <a href="/">
                        <img src="./images/logo.jpeg" alt="Logo do E-commerce">
                    </a>
                </div>
                <div class="logotext">
                    <h1>GreenTech</h1>
                </div>
            </div>
            <div class="searcher">
                <div class="search-container">
                    <input type="text" class="search-input" placeholder="Buscar...">
                    <img class="search-icon" src="./images/search1.svg" alt="Ícone de Pesquisa">
                </div>
            </div>
            <div class="cart">
                <a href="pagamento" rel="noopener noreferrer">
                    <img src="./images/cart.svg">
                </a>
            </div>
            <div class="button">
                <div class="loginimg">
                    <img src="../images/login-icon.svg" alt="icon login">
                    <a class="login-button" href="/login">Login</a>
                </div>
                <div class="logout-menu">
                    <div class="dropdown">
                        <button class="dropbtn">Login</button>
                        <div class="dropdown-content">
                            <a id="meus-pedidos" href="/pedidos">Meus Pedidos</a>
                            <a href="#" onclick="clearLocalStorage()">Sair</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <nav class="category">
            <ul class="nav">
                <% categorias.forEach(categoria => { %>
                    <li><a href="/produtos/<%= categoria.id_categoria %>"><%= categoria.nome_categoria %></a></li>
                <% }) %>
            </ul>
        </nav>
    </header>
    <div class="container">
        <div class="products">
            <h1>Meus Produtos</h1>
            <% let total = 0; %>
            <div class="container2">
            <% produtos.forEach(produto => { %>
                <div class="product" data-id="<%= produto.id_produto %>" data-price="<%= produto.preco_produto %>">
                    <img src="<%= produto.imagem_produto %>" alt="<%= produto.nome_produto %>">
                    <div class="product-details">
                        <h2><%= produto.nome_produto %></h2>
                        <div class="quantity">
                            <button class="quantity-button decrease"><i class="fas fa-minus"></i></button>
                            <p class="quantity-value">1</p>
                            <button class="quantity-button increase"><i class="fas fa-plus"></i></button>
                        </div>
                    </div>
                    <div class="price-and-delete">
                        <a href="#" class="delete"><i class="fas fa-trash"></i></a>
                        <p class="price">R$ <%= produto.preco_produto.toFixed(2) %></p>
                    </div>
                </div>
                <% total += produto.preco_produto; %>
            <% }); %>
            </div>
            <div class="subtotal">
                <p>VALOR TOTAL</p>
                <p id="total-value">R$ <%= total.toFixed(2) %></p>
            </div>
        </div>
        <div class="payment-methods">
            <h2>Formas de Pagamento</h2>
            <% tipoTransacoes.forEach(transacao => { %>
                <label>
                    <input type="radio" name="payment" value="<%= transacao.id_tipotransacao %>"> <%= transacao.nome_tipotransacao %>
                </label>
            <% }); %>
            <button class="finalize-button">Finalizar Pedido</button>
        </div>
    </div>
    <footer class="container-footer">
        <div class="footer-box">
            <p>Desenvolvido por Diêgo Farias e Isaias Mendes</p>
        </div>
    </footer>

    <script>
        function loadUsername() {
            document.addEventListener("DOMContentLoaded", function() {
                const username = localStorage.getItem('username')?.split(' ')[0];
                if (username) {
                    const loginButton = document.querySelector('.login-button');
                    const dropbtn = document.querySelector('.dropbtn');
                    const logoutMenu = document.querySelector('.logout-menu');

                    if (loginButton && dropbtn && logoutMenu) {
                        dropbtn.textContent = username;
                        logoutMenu.style.display = 'block';
                        loginButton.style.display = 'none';

                        dropbtn.addEventListener('click', function() {
                            const dropdownContent = document.querySelector('.dropdown-content');
                            dropdownContent.style.display = dropdownContent.style.display === 'block' ? 'none' : 'block';
                        });
                    }
                }
            });
        }

        function clearLocalStorage() {
            localStorage.removeItem('username');
            location.reload();
        }

        loadUsername();

        document.addEventListener('DOMContentLoaded', function() {
            const increaseButtons = document.querySelectorAll('.quantity-button.increase');
            const decreaseButtons = document.querySelectorAll('.quantity-button.decrease');
            const deleteButtons = document.querySelectorAll('.delete');
            const totalValueElement = document.getElementById('total-value');
            let cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

            increaseButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const quantityElement = this.previousElementSibling;
                    let quantity = parseInt(quantityElement.textContent);
                    const productElement = this.closest('.product');
                    const priceElement = productElement.querySelector('.price');
                    const originalPrice = parseFloat(productElement.getAttribute('data-price'));

                    quantity += 1;
                    quantityElement.textContent = quantity;
                    priceElement.textContent = 'R$ ' + (originalPrice * quantity).toFixed(2);

                    updateTotal();
                });
            });

            decreaseButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const quantityElement = this.nextElementSibling;
                    let quantity = parseInt(quantityElement.textContent);
                    const productElement = this.closest('.product');
                    const priceElement = productElement.querySelector('.price');
                    const originalPrice = parseFloat(productElement.getAttribute('data-price'));

                    if (quantity > 1) {
                        quantity -= 1;
                        quantityElement.textContent = quantity;
                        priceElement.textContent = 'R$ ' + (originalPrice * quantity).toFixed(2);

                        updateTotal();
                    }
                });
            });

            deleteButtons.forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const productElement = this.closest('.product');
                    const productId = productElement.getAttribute('data-id');
                    productElement.remove();

                    removeFromCart(productId);
                    updateTotal();
                });
            });

            function removeFromCart(productId) {
                cartItems = cartItems.filter(item => item !== productId);
                localStorage.setItem('cartItems', JSON.stringify(cartItems));
                const updatedCartItems = JSON.parse(localStorage.getItem('cartItems'));
                alert(`Item ${productId} removido do carrinho. Itens restantes: ${updatedCartItems.join(', ')}`);
            }
            
            function updateTotal() {
                let total = 0;

                document.querySelectorAll('.product').forEach(product => {
                    const quantity = parseInt(product.querySelector('.quantity-value').textContent);
                    const price = parseFloat(product.getAttribute('data-price'));
                    total += quantity * price;
                });

                totalValueElement.textContent = 'R$ ' + total.toFixed(2);
            }

            const finalizeButton = document.querySelector('.finalize-button');
            finalizeButton.addEventListener('click', function() {
                const selectedPayment = document.querySelector('input[name="payment"]:checked');
                if (!selectedPayment) {
                    alert('Selecione um método de pagamento!');
                    return;
                }

                // Remova o símbolo 'R$ ' e converta para float
                const tipoTransacaoId = selectedPayment.value;
                const totalValue = parseFloat(totalValueElement.textContent.replace('R$ ', ''));
               
                const pedido = {
                    status_pedido: 1, //aguardando
                    valorTotal_pedido: totalValue,
                    data_pedido: new Date().toISOString().slice(0, 10),
                    id_cliente_TB_CLIENTE: parseInt(localStorage.getItem('id')),
                    id_tipotransacao_TB_TIPOTRANSACAO: tipoTransacaoId // Assumindo que o valor é uma string em caixa alta
                };

                // Enviar pedido para o backend
                fetch('/pagamento/finalizar', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(pedido)
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Erro ao processar o pedido.');
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Pedido criado com sucesso:', data);
                    alert('Pedido criado com sucesso!');
                    window.location.href = '/pedidos'; // Redirecionar para a página de pedidos após o sucesso
                })
                .catch(error => {
                    console.error('Erro ao criar pedido:', error);
                    alert('Erro ao criar pedido. Tente novamente.');
                });
            });

             
        });
    </script>
</body>
</html>
